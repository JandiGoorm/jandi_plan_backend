name: Deploy to Local Server

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: JDK 17 설정
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle 실행 권한 부여 및 빌드
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          GCP_SA_KEY_BASE64: ${{ secrets.GCP_SA_KEY_BASE64 }}
          JWT_KEY: ${{ secrets.JWT_KEY }}
          OPEN_API_KEY: ${{ secrets.OPEN_API_KEY }}
          GOOGLE_MAP_KEY: ${{ secrets.GOOGLE_MAP_KEY }}
          KAKAO_RESTAPI_KEY: ${{ secrets.KAKAO_RESTAPI_KEY }}
          NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
          NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test

      - name: Docker 이미지 빌드
        run: |
          docker build -t jandi-plan-backend .

      - name: Docker 이미지 압축
        run: |
          docker save jandi-plan-backend | gzip > jandi-plan-backend.tar.gz

      - name: 로컬 서버에 Docker 이미지 전송
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.KYJ_LOCAL_SERVER_HOST }}
          username: ${{ secrets.KYJ_LOCAL_SERVER_USER }}
          port: ${{ secrets.KYJ_LOCAL_SERVER_PORT }}
          key: ${{ secrets.KYJ_SSH_PRIVATE_KEY }}
          source: "jandi-plan-backend.tar.gz"
          target: "~/"

      - name: 로컬 서버에서 Docker 컨테이너 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.KYJ_LOCAL_SERVER_HOST }}
          username: ${{ secrets.KYJ_LOCAL_SERVER_USER }}
          port: ${{ secrets.KYJ_LOCAL_SERVER_PORT }}
          key: ${{ secrets.KYJ_SSH_PRIVATE_KEY }}
          script: |
            echo "DB_URL=${{ secrets.DB_URL }}" > ~/spring_env
            echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> ~/spring_env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ~/spring_env
            echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> ~/spring_env
            echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> ~/spring_env
            echo "JWT_KEY=${{ secrets.JWT_KEY }}" >> ~/spring_env
            echo "OPEN_API_KEY=${{ secrets.OPEN_API_KEY }}" >> ~/spring_env
            echo "GOOGLE_MAP_KEY=${{ secrets.GOOGLE_MAP_KEY }}" >> ~/spring_env
            echo "KAKAO_RESTAPI_KEY=${{ secrets.KAKAO_RESTAPI_KEY }}" >> ~/spring_env
            echo "NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }}" >> ~/spring_env
            echo "NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }}" >> ~/spring_env
            echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> ~/spring_env
            echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> ~/spring_env
            echo "GCP_SA_KEY_BASE64=${{ secrets.GCP_SA_KEY_BASE64 }}" >> ~/spring_env
      
            docker load < ~/jandi-plan-backend.tar.gz
            docker stop jandi-plan-backend || true
            docker rm jandi-plan-backend || true
            docker run --env-file ~/spring_env -d --name jandi-plan-backend -p 8080:8080 jandi-plan-backend
