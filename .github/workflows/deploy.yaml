name: CI-CD for Spring Boot

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 저장소 코드 가져오기
      - name: Check out code
        uses: actions/checkout@v3

      # 2. JDK 설정 (Java 17 사용)
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      # 3. Gradle 빌드 (빌드 시 DB, MAIL, GCP_SA_KEY_BASE64 환경변수 사용)
      - name: Build with Gradle
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          GCP_SA_KEY_BASE64: ${{ secrets.GCP_SA_KEY_BASE64 }}
        run: |
          chmod +x gradlew  # gradlew 파일에 실행 권한 부여
          ./gradlew clean build --info --stacktrace

      # 4. GCP 인증 - 서비스 계정 키(JSON) 이용
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 5. gcloud 프로젝트 설정
      - name: Configure gcloud
        run: gcloud config set project planbackend-450513

      # 6. Docker 인증 - Artifact Registry 접근
      - name: Configure Docker auth for Artifact Registry
        run: gcloud auth configure-docker asia-northeast3-docker.pkg.dev

      # 7. Docker 이미지 빌드 (커밋 SHA를 태그로 사용)
      - name: Build Docker image
        run: |
          docker build -t asia-northeast3-docker.pkg.dev/planbackend-450513/plan-backend-ar/my-spring-image:$GITHUB_SHA .

      # 8. Docker 이미지 Artifact Registry에 푸시
      - name: Push Docker image
        run: |
          docker push asia-northeast3-docker.pkg.dev/planbackend-450513/plan-backend-ar/my-spring-image:$GITHUB_SHA

      # 9. Cloud Run에 배포 (환경 변수에 GCP_SA_KEY_BASE64 포함)
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ secrets.CLOUD_RUN_SERVICE }} \
            --image asia-northeast3-docker.pkg.dev/planbackend-450513/plan-backend-ar/my-spring-image:$GITHUB_SHA \
            --platform managed \
            --region asia-northeast3 \
            --service-account planbackend@planbackend-450513.iam.gserviceaccount.com \
            --allow-unauthenticated \
            --set-env-vars DB_URL=${{ secrets.DB_URL }},DB_USERNAME=${{ secrets.DB_USERNAME }},DB_PASSWORD=${{ secrets.DB_PASSWORD }},MAIL_USERNAME=${{ secrets.MAIL_USERNAME }},MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }},GCP_SA_KEY_BASE64=${{ secrets.GCP_SA_KEY_BASE64 }}
